% Sweave(file = "./trioClasses.Rnw")
\documentclass[10pt]{article}
<<echo=FALSE>>=
  options(width=70, continue = " ")
@
\SweaveOpts{eps=FALSE,echo=TRUE,figs.only=TRUE,keep.source=FALSE, prefix.string=figures/trioClasses}
\usepackage{fullpage}
\usepackage{times}
\usepackage[colorlinks=TRUE,urlcolor=blue,citecolor=blue]{hyperref}
\title{The R package \emph{trioClasses} for definition of the class \emph{SNPTrioExperiment}, an extension of \emph{SummarizedExperiment}, for use in trio based analyses of genetic data.}
\author{Samuel G. Younkin}%, Robert Scharpf, Holger Schwender, Ingo Ruczinski}
\date{\today}
%\input{/home/bst/student/syounkin/jhsph/latex/sgy}
%\input{/home/sgy/jhsph/latex/sgy}
\begin{document}
\setlength{\parskip}{0.2\baselineskip}
\setlength{\parindent}{0pt}
\maketitle
\section{Packages \& Data}
<<package>>=
library("trioClasses")
data("sample")
data("8q24-european-all.sm")
#data("8q24-chinese-all.sm")
#data("BMP4-european-all.sm")
#data("BMP4-chinese-all.sm")
@
<<prelim, echo = FALSE, eval = TRUE>>=
pos <- as(do.call("rbind", strsplit(colnames(sm),split = ":") )[,2], "integer" )
chr <- do.call("rbind", strsplit(colnames(sm),split = ":") )[,1]
gr <- GRanges( seqnames = chr, ranges = IRanges(start = pos, width = 1), strand = "*" )
names(gr) <- colnames(sm)
col.DF <- DataFrame( id = rownames(sm) )
rownames(col.DF) <- rownames(sm)
@ 
\section{SummarizedExperiment}
<<data, echo = TRUE>>=
se <- SummarizedExperiment(assays = SimpleList(cnv = t(sm)), colData = col.DF, rowData = gr )
@ 
\section{Pedigree}
<<ped>>=
ped <- PedClass(ped.DF)
@ 
\section{CNVTrioExperiment}
<<ste>>=
(cte <- CNVTrioExperiment(se, pedigree = ped ))
@ 

\end{document}
%% <<gtrio, echo = FALSE, eval = FALSE>>=
%% gtrio <- trioClasses:::GenoTrio(ste)
%% index <- with(gtrio, !( is.na(F) | is.na(M) | is.na(O) ) )
%% F <- as(with(gtrio,F), "numeric")[index]
%% M <- as(with(gtrio,M), "numeric")[index]
%% O <- as(with(gtrio,O), "numeric")[index]
%% table(paste0(F,M,O))
%% @ 
%% \section{Methods}
%% \subsection{ScanTrio}
%% <<sterare>>=
%% (ste.rare <- ste[!(MAF(ste) >= 0.01 | is.na(MAF(ste)))])
%% @ 
%% <<window-by-snv, eval = TRUE, echo = FALSE>>=
%% n.win <- 100
%% n.snp <- ceiling(length(rowData(ste.rare))/n.win)
%% p <- length(rowData(ste.rare))
%% i.vec <- seq(1,p,by = n.snp )
%% j.vec <- seq(n.snp,p+n.snp,by = n.snp )
%% j.vec[length(j.vec)] <- p
%% #n <- 1000
%% start <- start(range(rowData(ste.rare)))
%% end <- end(range(rowData(ste.rare)))
%% #wd <- ceiling((end-start)/n)
%% #wd <- 100e3
%% #start.vec <- seq(start,end+wd,by = wd)
%% window <- GRanges( seqnames = levels(seqnames(rowData(ste.rare))), ranges = IRanges( start = start(rowData(ste.rare))[i.vec], end = start(rowData(ste.rare))[j.vec] ), strand = "*" )
%% window <- window[-length(window)]
%% @ 
%% Create a GRanges object such that each range contain \Sexpr{n.snp} rare variants.
%% <<window, echo = FALSE>>=
%% n.snp
%% table(countOverlaps( window, rowData(ste.rare)))
%% @ 
%% <<scantrio>>=
%% window <- rowData(ste)[1:10] + 1e3
%% system.time( scan.trio <- ScanTrio( object = ste.rare, window = window, block = range(rowData(ste.rare))))
%% scan.trio
%% @ 
%% \begin{figure}
%% <<plotscantrio, fig = TRUE, echo = FALSE, eval = TRUE>>=
%% with( as( scan.trio, "data.frame" ), {
%%   plot( rowSums(cbind(start(window),end(window)))/2, log(lr), pch = 20, type = "b", lty = 3, axes = FALSE, xlab = "MB", ylab = "log(LR)")
%%   axis(2)
%% axis(1, at = at <- seq(start,end,length.out=4), labels = round(at/1e6,1) )
%% })
%% @ 
%% \end{figure}
%% \clearpage
%% \subsection{Holger-style Genotype Matrix}
%% Coercion to matrix for \emph{trio}
%% <<trio>>=
%% geno <- as(ste, "matrix")
%% aTDT(geno[,1:5])
%% @ 
%% Or apply the aTDT method to the SNPTrioExperiment directly.
%% <<trio2>>=
%% aTDT(ste[1:5])
%% @ 
%% \clearpage
%% %~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%% %~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%% %~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%% \appendix
%% \section{Count of Transmission of Variants (\emph{TransCount()})}
%% \subsection{Window}
%% <<windows, eval = FALSE>>=
%% window <- gr[100] + 10e3
%% window2 <- gr[100] + 1e3
%% block <- range(rowData(ste))
%% @ 
%% <<transcount, eval = FALSE>>=
%% TransCount( ste, window )
%% @ 
%% \subsection{Not in window, but in block}
%% <<transcount, eval = FALSE>>=
%% TransCount( ste, setdiff(block, window) )
%% @ 
%% \subsection{In the whole block}
%% <<transcount, eval = FALSE>>=
%% #block
%% TransCount( ste, block )
%% @ 
%% \subsection{In both windows}
%% <<iter, eval = FALSE>>=
%% TransCount( ste, GRangesList(window, window2) )
%% @ 
%% \subsection{Not ``In both windows,'' but in block}
%% <<iter, eval = FALSE>>=
%% TransCount( ste, GRangesList(setdiff(block,window), setdiff(block,window2)))
%% @ 
%% \section{Count of Transmission of Rare Variants (\emph{TransCount()})}
%% <<ste.rare, eval = FALSE, echo = FALSE, eval = FALSE>>=
%% ste.rare <- ste[MAF(ste)<=0.01]
%% @ 
%% \subsection{In both windows}
%% <<iter, eval = FALSE, echo = FALSE, eval = FALSE>>=
%% TransCount( ste.rare, GRangesList(window, window2) )
%% @ 
%% \subsection{Not ``In both windows,'' but in block}
%% <<iter, eval = FALSE, echo = FALSE, eval = FALSE>>=
%% TransCount( ste.rare, GRangesList(setdiff(block,window), setdiff(block,window2)))
%% @ 
%% \section{Classes}
%% \subsection{SnpMatrix, DataFrame, GRanges} 
%% The four key ingredients are the SNP matrix, the pedigree information as a DataFrame, position of the SNPs given by a GRanges object, and covariate data given as a DataFrame.
%% <<grdf2, eval = FALSE>>=
%% sm
%% ped.DF
%% gr
%% @ 
%% \subsection{SummarizedExperiment}
%% We combine three of the key ingredients when we create the SummarizedExperiment object.
%% <<se, eval = FALSE>>=
%% se <- SummarizedExperiment(assays = SimpleList(geno = t(sm)), colData = col.DF, rowData = gr )
%% @ 
%% \subsection{SNPTrioExperiment}
%% Now, we include the pedigree information as an object of class PedClass.  We keep PedClass independent of SNPTrioExperiment for flexibility.
%% <<ste, eval = FALSE>>=
%% ped <- PedClass(ped.DF)
%% ste <- SNPTrioExperiment(se, pedigree = ped )
%% @ 
%% Here is the show method.
%% <<ste-show, eval = FALSE>>=
%% ste
%% @ 
%% And now we verify that it is indeed an extension of SummarizedExperiment.
%% <<ste-class, eval = FALSE>>=
%% getClass("SNPTrioExperiment")
%% @ 
%% \subsection{PedClass}
%% Now we investigate the pedigree slot of the SNPTrioExperiment object.
%% <<classes, eval = FALSE>>=
%% class(pedigree(ste))
%% getClass("PedClass")
%% pedigree(ste)
%% @
%% \subsection{geno accessor}
%% <<geno, eval = FALSE>>=
%% class(geno(ste))
%% getClass("SnpMatrix")
%% geno(ste)
%% @ 
%% \subsection{RowData}
%% <<rowdata, eval = FALSE>>=
%% rowData(ste)
%% @ 
%% \subsection{ColData}
%% <<coldata, eval = FALSE, echo = FALSE, eval = FALSE>>=
%% colData(ste)
%% @ 
%% \section{Validity}
