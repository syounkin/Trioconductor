% Sweave(file = "./trioClasses.Rnw")
\documentclass[10pt]{article}
<<echo=FALSE>>=
  options(width=70, continue = " ")
@
\SweaveOpts{eps=FALSE,echo=TRUE,figs.only=TRUE,keep.source=FALSE, prefix.string=figures/trioClasses}
\usepackage{fullpage}
\usepackage{times}
\usepackage[colorlinks=TRUE,urlcolor=blue,citecolor=blue]{hyperref}
\title{The R package \emph{trioClasses} for definition of the class \emph{SNPTrioExperiment}, an extension of \emph{SummarizedExperiment}, for use in trio based analyses of genetic data.}
\author{Samuel G. Younkin}%, Robert Scharpf, Holger Schwender, Ingo Ruczinski}
\date{\today}
%\input{/home/bst/student/syounkin/jhsph/latex/sgy}
%\input{/home/sgy/jhsph/latex/sgy}
\begin{document}
\setlength{\parskip}{0.2\baselineskip}
\setlength{\parindent}{0pt}
\maketitle
\section{Packages \& Data}
<<package>>=
library("trioClasses")
data("sample")
data("8q24-european-all.sm")
#data("BMP4-european-all.sm")
#data("BMP4-chinese-all.sm")
@
<<prelim, echo = FALSE, eval = TRUE>>=
pos <- as(do.call("rbind", strsplit(colnames(sm),split = ":") )[,2], "integer" )
chr <- do.call("rbind", strsplit(colnames(sm),split = ":") )[,1]
gr <- GRanges( seqnames = chr, ranges = IRanges(start = pos, width = 1), strand = "*" )
names(gr) <- colnames(sm)
col.DF <- DataFrame( id = rownames(sm) )
rownames(col.DF) <- rownames(sm)
#table(as(sm,"numeric"), useNA = "ifany")
@ 
\section{SummarizedExperiment}
<<data, echo = TRUE>>=
se <- SummarizedExperiment(assays = SimpleList(geno = t(sm)), colData = col.DF, rowData = gr )
@ 
\section{Pedigree}
<<ped>>=
ped <- PedClass(ped.DF)
@ 
\section{SNPTrioExperiment}
<<ste>>=
ste <- SNPTrioExperiment(se, pedigree = ped )
@ 
<<ste-show>>=
ste
@ 
<<gtrio>>=
gtrio <- trioClasses:::GenoTrio(ste)
index <- with(gtrio, !( is.na(F) | is.na(M) | is.na(O) ) )
F <- as(with(gtrio,F), "numeric")[index]
M <- as(with(gtrio,M), "numeric")[index]
O <- as(with(gtrio,O), "numeric")[index]
table(paste0(F,M,O))
#table(paste0(F[!is.na(F) & !is.na(M) & !is.na(O)],M[!is.na(F) & !is.na(M) & !is.na(O)],O[!is.na(F) & !is.na(M) & !is.na(O)]))
@ 
\section{Methods}
\subsection{ScanTrio}
%Run ScanTrio for windows of size 1 kB centered at each of the first ten rare variants.
<<sterare>>=
ste.rare <- ste[!(MAF(ste) >= 0.01 | is.na(MAF(ste)))]
ste.rare
@ 
<<scantrio>>=
(scan.trio <- ScanTrio( object = ste.rare, window = rowData(ste.rare[1:500]) + 10e3, block = range(rowData(ste.rare))))
@ 
\subsection{Holger-style Genotype Matrix}
Coercion to matrix for \emph{trio}
<<trio>>=
geno <- as(ste, "matrix")
aTDT(geno[,1:5])
@ 
Or apply the aTDT method to the SNPTrioExperiment directly.
<<trio2>>=
aTDT(ste[1:5])
@ 
\clearpage
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
\appendix
\section{Count of Transmission of Variants (\emph{TransCount()})}
\subsection{Window}
<<windows>>=
window <- gr[100] + 10e3 #GRanges( seqnames =  "chr14", IRanges(start(gr[100]), width = 10e3), strand = "*")
window2 <- gr[100] + 1e3 #GRanges( seqnames = "chr14", IRanges(start(gr[100]), width = 1e3), strand = "*")
block <- range(rowData(ste))
@ 
<<transcount>>=
#window
TransCount( ste, window )
@ 
\subsection{Not in window, but in block}
<<transcount>>=
#setdiff(block,window)
TransCount( ste, setdiff(block, window) )
@ 
\subsection{In the whole block}
<<transcount>>=
#block
TransCount( ste, block )
@ 
\subsection{In both windows}
<<iter>>=
TransCount( ste, GRangesList(window, window2) )
@ 
\subsection{Not ``In both windows,'' but in block}
<<iter>>=
TransCount( ste, GRangesList(setdiff(block,window), setdiff(block,window2)))
@ 
\section{Count of Transmission of Rare Variants (\emph{TransCount()})}
<<ste.rare, eval = FALSE, echo = FALSE>>=
ste.rare <- ste[MAF(ste)<=0.01]
@ 
\subsection{In both windows}
<<iter, eval = FALSE, echo = FALSE>>=
TransCount( ste.rare, GRangesList(window, window2) )
@ 
\subsection{Not ``In both windows,'' but in block}
<<iter, eval = FALSE, echo = FALSE>>=
TransCount( ste.rare, GRangesList(setdiff(block,window), setdiff(block,window2)))
@ 
\section{Classes}
\subsection{SnpMatrix, DataFrame, GRanges} 
The four key ingredients are the SNP matrix, the pedigree information as a DataFrame, position of the SNPs given by a GRanges object, and covariate data given as a DataFrame.
<<grdf2>>=
sm
ped.DF
gr
@ 
\subsection{SummarizedExperiment}
We combine three of the key ingredients when we create the SummarizedExperiment object.
<<se>>=
se <- SummarizedExperiment(assays = SimpleList(geno = t(sm)), colData = col.DF, rowData = gr )
@ 
\subsection{SNPTrioExperiment}
Now, we include the pedigree information as an object of class PedClass.  We keep PedClass independent of SNPTrioExperiment for flexibility.
<<ste>>=
ped <- PedClass(ped.DF)
ste <- SNPTrioExperiment(se, pedigree = ped )
@ 
Here is the show method.
<<ste-show>>=
ste
@ 
And now we verify that it is indeed an extension of SummarizedExperiment.
<<ste-class>>=
getClass("SNPTrioExperiment")
@ 
\subsection{PedClass}
Now we investigate the pedigree slot of the SNPTrioExperiment object.
<<classes>>=
class(pedigree(ste))
getClass("PedClass")
pedigree(ste)
@
\subsection{geno accessor}
<<geno>>=
class(geno(ste))
getClass("SnpMatrix")
geno(ste)
@ 
\subsection{RowData}
<<rowdata>>=
rowData(ste)
@ 
\subsection{ColData}
<<coldata, eval = FALSE, echo = FALSE>>=
colData(ste)
@ 
\section{Validity}
\end{document}
